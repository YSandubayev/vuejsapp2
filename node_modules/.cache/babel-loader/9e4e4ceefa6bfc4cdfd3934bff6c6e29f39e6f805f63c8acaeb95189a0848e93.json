{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, renderList as _renderList, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock, toDisplayString as _toDisplayString, createElementVNode as _createElementVNode } from \"vue\";\nconst _hoisted_1 = [\"onClick\"];\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  return _openBlock(), _createElementBlock(\"form\", null, [_createCommentVNode(\" <div id=\\\"feedback\\\">\\n    <button id=\\\"good\\\" onClick=\\\"send_data()\\\"><img alt=\\\"Good\\\" id=\\\"gd\\\" src=\\\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Twemoji_1f600.svg/1200px-Twemoji_1f600.svg.png\\\" width=\\\"50\\\" height=\\\"50\\\"></button>\\n    <button id=\\\"normal\\\" onClick=\\\"send_data()\\\"><img alt=\\\"Normal\\\" id=\\\"nr\\\" src=\\\"https://images.emojiterra.com/twitter/v13.1/512px/1f610.png\\\" width=\\\"50\\\" height=\\\"50\\\"></button>\\n    <button id=\\\"bad\\\" onClick=\\\"send_data()\\\"><img alt=\\\"Bad\\\" id=\\\"bd\\\" src=\\\"https://images.emojiterra.com/google/noto-emoji/v2.034/512px/1f625.png\\\" width=\\\"50\\\" height=\\\"50\\\"></button>\\n    </div> \"), (_openBlock(true), _createElementBlock(_Fragment, null, _renderList($data.modifiedData, todo => {\n    return _openBlock(), _createElementBlock(\"div\", null, [_createElementVNode(\"div\", {\n      onClick: $event => _ctx.testFunc(todo.text)\n    }, _toDisplayString(todo.text), 9 /* TEXT, PROPS */, _hoisted_1)]);\n  }), 256 /* UNKEYED_FRAGMENT */))]);\n}","map":{"version":3,"mappings":";;;uBACEA,oBAYO,eAXLC,spBAIU,qBAEVD,oBAIME,6BAJcC,kBAAY,EAApBC,IAAI;yBAAhBJ,oBAIM,cAHJK,oBAEM;MAFIC,OAAK,YAAEC,aAAQ,CAACH,IAAI,CAACI,IAAI;wBAC/BJ,IAAI,CAACI,IAAI","names":["_createElementBlock","_createCommentVNode","_Fragment","$data","todo","_createElementVNode","onClick","_ctx","text"],"sourceRoot":"","sources":["C:\\another\\src\\App.vue"],"sourcesContent":["<template>\n  <form>\n    <!-- <div id=\"feedback\">\n    <button id=\"good\" onClick=\"send_data()\"><img alt=\"Good\" id=\"gd\" src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/9/90/Twemoji_1f600.svg/1200px-Twemoji_1f600.svg.png\" width=\"50\" height=\"50\"></button>\n    <button id=\"normal\" onClick=\"send_data()\"><img alt=\"Normal\" id=\"nr\" src=\"https://images.emojiterra.com/twitter/v13.1/512px/1f610.png\" width=\"50\" height=\"50\"></button>\n    <button id=\"bad\" onClick=\"send_data()\"><img alt=\"Bad\" id=\"bd\" src=\"https://images.emojiterra.com/google/noto-emoji/v2.034/512px/1f625.png\" width=\"50\" height=\"50\"></button>\n    </div> -->\n\n    <div v-for=\"todo in modifiedData\">\n      <div v-on:click=\"testFunc(todo.text)\">\n        {{todo.text}}\n      </div>\n    </div>\n  </form>\n</template>\n\n<script>\nimport axios from 'axios'\nexport default {\n  name: 'App',\n  data() {\n    return {\n      modifiedData: {\n        status: '',\n        ip_address: '',\n        shop_id: 1, //prompt()\n      },\n      error: null\n    }\n  },\n\n  methods: {\n    handleSubmit: async function(e) {\n      e.preventDefault();\n\n      try {\n        const response = await axios.post('http://localhost:1337/api/feedbacks', {\n          data: {\n            status: this.modifiedData.status,\n            ip_address: this.modifiedData.ip_address,\n            shop_id: this.modifiedData.shop_id\n          }\n        })\n        console.log(response);\n      } catch(error) {\n        this.error = error;\n      }\n    },\n\n    //var iptGood = document.getElementById('good');\n    //var iptNormal = document.getElementById('normal');\n    //var iptBad = document.getElementById('bad');   \n    \n    //var btnGood = document.getElementById('gd');\n    //var btnNormal = document.getElementById('nr');\n    //var btnBad = document.getElementById('bd');\n\n//     handleSend: async function(e) {\n//     e.preventDefault();\n\n//     try {\n//     const iptGood = document.getElementById('good');\n//     const btnGood = document.getElementById('gd');\n//     btnGood.addEventListener('send_data', function() {\n//       if(iptGood === 'gd') {\n//         const response = axios.post('http://localhost:1337/api/feedbacks', {\n//           data: {\n//             status: 'good', //this.modifiedData.status,\n//             ip_address: '126.12.15.55', //this.modifiedData.ip_address,\n//             shop_id: 1 //this.modifiedData.shop_id\n//           }\n//         }); console.log(response);\n//       } else {\n//           console.log(\"Invalid data\");\n//       }\n//     });\n\n//     const iptNormal = document.getElementById('normal');\n//     const btnNormal = document.getElementById('nr');\n//     btnNormal.addEventListener('send_data', function() {\n//       if(iptNormal === 'nr') {\n//         const response = axios.post('http://localhost:1337/api/feedbacks', {\n//           data: {\n//             status: 'normal', //this.modifiedData.status,\n//             ip_address: '126.12.15.55', //this.modifiedData.ip_address,\n//             shop_id: 1 //this.modifiedData.shop_id\n//           }\n//         }); console.log(response);\n//       } else {\n//           console.log(\"Invalid data\");\n//       }\n//     });\n\n//     const iptBad = document.getElementById('bad');\n//     const btnBad = document.getElementById('bd');\n//     btnBad.addEventListener('send_data', function() {\n//       if(iptBad === 'bd') {\n//         const response = axios.post('http://localhost:1337/api/feedbacks', {\n//           data: {\n//             status: 'bad', //this.modifiedData.status,\n//             ip_address: '126.12.15.55', //this.modifiedData.ip_address,\n//             shop_id: 1 //this.modifiedData.shop_id\n//           }\n//         }); console.log(response);\n//       } else {\n//           console.log(\"Invalid data\");\n//       }\n//     });\n//   } catch(error) {\n//         this.error = error;\n//       }\n// }\n\n  }\n\n}\n</script>\n\n<style>\n#app {\n  font-family: Avenir, Helvetica, Arial, sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  text-align: center;\n  color: #2c3e50;\n  margin-top: 60px;\n}\n\n</style>\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}