{"ast":null,"code":"import { createCommentVNode as _createCommentVNode, createTextVNode as _createTextVNode, resolveComponent as _resolveComponent, withCtx as _withCtx, createVNode as _createVNode, createElementVNode as _createElementVNode, Fragment as _Fragment, openBlock as _openBlock, createElementBlock as _createElementBlock } from \"vue\";\nconst _hoisted_1 = {\n  id: \"nav\"\n};\nexport function render(_ctx, _cache, $props, $setup, $data, $options) {\n  const _component_router_link = _resolveComponent(\"router-link\");\n  return _openBlock(), _createElementBlock(_Fragment, null, [_createCommentVNode(\" <div>\\r\\n      <button v-on:click=\\\"sendEmoji('normal')\\\">Normal üòÉ</button>\\r\\n      <button v-on:click=\\\"sendEmoji('good')\\\">Good üòç</button>\\r\\n      <button v-on:click=\\\"sendEmoji('bad')\\\">Bad üòé</button>\\r\\n    </div> \"), _createElementVNode(\"div\", _hoisted_1, [_createVNode(_component_router_link, {\n    to: \"/MegaMoskva\"\n  }, {\n    default: _withCtx(() => [_createTextVNode(\"MegaMoskva\")]),\n    _: 1 /* STABLE */\n  })])], 2112 /* STABLE_FRAGMENT, DEV_ROOT_FRAGMENT */);\n}","map":{"version":3,"mappings":";;EAOSA,EAAE,EAAC;AAAK;;;6DANbC,uPAIU,EAEVC,oBAEM,OAFNC,UAEM,GADJC,aAAsDC;IAAzCC,EAAE,EAAC;EAAa;sBAAC,MAAU,kBAAV,YAAU","names":["id","_createCommentVNode","_createElementVNode","_hoisted_1","_createVNode","_component_router_link","to"],"sourceRoot":"","sources":["C:\\another\\src\\components\\MegaMoskva.vue"],"sourcesContent":["<template>\r\n    <!-- <div>\r\n      <button v-on:click=\"sendEmoji('normal')\">Normal üòÉ</button>\r\n      <button v-on:click=\"sendEmoji('good')\">Good üòç</button>\r\n      <button v-on:click=\"sendEmoji('bad')\">Bad üòé</button>\r\n    </div> -->\r\n  \r\n    <div id=\"nav\">\r\n      <router-link to=\"/MegaMoskva\">MegaMoskva</router-link>\r\n    </div>\r\n  \r\n  </template>\r\n  \r\n  <script>\r\n  import axios from 'axios'\r\n  export default {\r\n    name: 'MegaMoskva',\r\n    data() {\r\n      return {\r\n        modifiedData: {\r\n          status: '',\r\n          ip_address: '',\r\n          shop_id: 2\r\n        },\r\n        error: null\r\n      }\r\n    },\r\n  \r\n  methods: {\r\n      sendEmoji(status) {\r\n        axios.post('http://localhost:1337/api/feedbacks', {\r\n          data: {\r\n              status: status, //modifiedData.status,\r\n              ip_address: '126.12.29.29', //modifiedData.ip_address,\r\n              shop_id: 2 //modifiedData.shop_id\r\n            }\r\n          })\r\n          .then(response => {\r\n            console.log(response.data)\r\n          })\r\n          .catch(error => {\r\n            console.error(error)\r\n          })\r\n      }\r\n  \r\n  \r\n    }\r\n  }\r\n  </script>\r\n  \r\n  <style>\r\n  #MegaMoskva {\r\n    font-family: Avenir, Helvetica, Arial, sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-align: center;\r\n    color: #2c3e50;\r\n    margin-top: 60px;\r\n  }\r\n  \r\n  </style>"]},"metadata":{},"sourceType":"module","externalDependencies":[]}